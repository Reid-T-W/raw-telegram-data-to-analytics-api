"""aggregation tables added for daily monthly and yearly conunts

Revision ID: 960ce3efd886
Revises: 15eb4fe8a608
Create Date: 2025-08-16 16:23:08.303132

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '960ce3efd886'
down_revision: Union[str, None] = '15eb4fe8a608'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('agg_top_products', 'product_name',
               existing_type=sa.VARCHAR(length=5000),
               nullable=False,
               schema='public_mart')
    op.create_unique_constraint(None, 'agg_top_products', ['product_name'], schema='public_mart')
    op.alter_column('dim_channels', 'id',
               existing_type=sa.BIGINT(),
               nullable=False,
               autoincrement=True,
               schema='public_mart')
    op.create_unique_constraint(None, 'dim_channels', ['id'], schema='public_mart')
    op.alter_column('dim_dates', 'id',
               existing_type=sa.BIGINT(),
               nullable=False,
               autoincrement=True,
               schema='public_mart')
    op.create_unique_constraint(None, 'dim_dates', ['id'], schema='public_mart')
    op.alter_column('fact_messages', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True,
               schema='public_mart')
    op.alter_column('fact_messages', 'channel_dim_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True,
               schema='public_mart')
    op.create_unique_constraint(None, 'fact_messages', ['id'], schema='public_mart')
    op.create_foreign_key(None, 'fact_messages', 'dim_channels', ['channel_dim_id'], ['id'], source_schema='public_mart', referent_schema='public_mart')
    op.alter_column('fct_image_detections', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True,
               schema='public_mart')
    op.create_unique_constraint(None, 'fct_image_detections', ['id'], schema='public_mart')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'fct_image_detections', schema='public_mart', type_='unique')
    op.alter_column('fct_image_detections', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True,
               schema='public_mart')
    op.drop_constraint(None, 'fact_messages', schema='public_mart', type_='foreignkey')
    op.drop_constraint(None, 'fact_messages', schema='public_mart', type_='unique')
    op.alter_column('fact_messages', 'channel_dim_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True,
               schema='public_mart')
    op.alter_column('fact_messages', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True,
               schema='public_mart')
    op.drop_constraint(None, 'dim_dates', schema='public_mart', type_='unique')
    op.alter_column('dim_dates', 'id',
               existing_type=sa.BIGINT(),
               nullable=True,
               autoincrement=True,
               schema='public_mart')
    op.drop_constraint(None, 'dim_channels', schema='public_mart', type_='unique')
    op.alter_column('dim_channels', 'id',
               existing_type=sa.BIGINT(),
               nullable=True,
               autoincrement=True,
               schema='public_mart')
    op.drop_constraint(None, 'agg_top_products', schema='public_mart', type_='unique')
    op.alter_column('agg_top_products', 'product_name',
               existing_type=sa.VARCHAR(length=5000),
               nullable=True,
               schema='public_mart')
    # ### end Alembic commands ###
